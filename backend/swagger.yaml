openapi: 3.0.0
info:
  title: Course Management Platform API
  version: 1.0.0
servers:
  - url: http://localhost:5000/api
paths:
  /auth/register:
    post:
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '201':
          description: User registered successfully
  /auth/login:
    post:
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: User logged in successfully
  /courses:
    get:
      tags:
        - Course Allocation
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of course offerings
    post:
      tags:
        - Course Allocation
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseOffering'
      responses:
        '201':
          description: Course offering created
  /courses/{id}:
    put:
      tags:
        - Course Allocation
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseOffering'
      responses:
        '200':
          description: Course offering updated
    delete:
      tags:
        - Course Allocation
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Course offering deleted
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterUser:
      type: object
      required:
        - username
        - email
        - password
        - role
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - manager
            - facilitator
            - student
    LoginUser:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    Course:
      type: object
      required:
        - module
        - class
        - trimester
        - cohort
        - intakePeriod
        - mode
        - facilitatorId
      properties:
        module:
          type: string
        class:
          type: string
        trimester:
          type: string
        cohort:
          type: string
        intakePeriod:
          type: string
        mode:
          type: string
        facilitatorId:
          type: integer
